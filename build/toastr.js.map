{"version":3,"sources":["toastr.js"],"names":["define","$","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","describeArc","startAngle","endAngle","start","end","arcSweep","d","join","pad","n","width","z","length","Array","error","message","title","optionsOverride","notify","type","toastType","iconClass","getOptions","iconClasses","getContainer","options","create","$container","containerId","createContainer","info","subscribe","callback","listener","success","warning","clear","$toastElement","clearOptions","clearToast","clearContainer","remove","removeToast","children","toastsToClear","i","force","hideMethod","duration","hideDuration","easing","hideEasing","complete","attr","addClass","positionClass","appendTo","target","getDefaults","tapToDismiss","toastClass","debug","showMethod","showDuration","showEasing","onShown","undefined","onHidden","extendedTimeOut","timeOut","titleClass","messageClass","closeHtml","newestOnTop","preventDuplicates","progressBar","showTimer","timerOptions","size","stroke","publish","args","map","personalizeToast","setIcon","setTitle","setMessage","setCloseButton","setProgressBar","setSequence","setBlocker","handleEvents","hover","stickAround","delayedHideToast","onclick","click","hideToast","closeButton","$closeElement","event","stopPropagation","cancelBubble","displayToast","hide","intervalId","setTimeout","maxHideTime","parseFloat","hideEta","Date","getTime","setInterval","updateProgress","prepend","append","$titleElement","$messageElement","$timerElement","find","css","height","blockUi","$blockerElement","on","e","$progressElement","shouldExit","previousToast","override","clearTimeout","response","state","endTime","stop","percentage","totalSeconds","seconds","floor","minutes","text","extend","toastId","startTime","console","log","toastr","is","version","amd","deps","factory","module","exports","require","window"],"mappings":"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","file":"toastr.js","sourcesContent":["/*\r\n * Toastr\r\n * Copyright 2012-2015\r\n * Authors: John Papa, Hans Fj√§llemark, and Tim Ferrell.\r\n * All Rights Reserved.\r\n * Use, reproduction, distribution, and modification of this code is subject to the terms and\r\n * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php\r\n *\r\n * ARIA Support: Greta Krafsig\r\n *\r\n * Project: https://github.com/CodeSeven/toastr\r\n */\r\n/* global define */\r\n; (function (define) {\r\n    define(['jquery'], function ($) {\r\n        return (function () {\r\n            var $container;\r\n            var listener;\r\n            var toastId = 0;\r\n            var toastType = {\r\n                error: 'error',\r\n                info: 'info',\r\n                success: 'success',\r\n                warning: 'warning'\r\n            };\r\n\r\n            var toastr = {\r\n                clear: clear,\r\n                remove: remove,\r\n                error: error,\r\n                getContainer: getContainer,\r\n                info: info,\r\n                options: {},\r\n                subscribe: subscribe,\r\n                success: success,\r\n                version: '2.1.1',\r\n                warning: warning\r\n            };\r\n\r\n            var previousToast;\r\n\r\n            return toastr;\r\n\r\n            ////////////////\r\n\r\n            function error(message, title, optionsOverride) {\r\n                return notify({\r\n                    type: toastType.error,\r\n                    iconClass: getOptions().iconClasses.error,\r\n                    message: message,\r\n                    optionsOverride: optionsOverride,\r\n                    title: title\r\n                });\r\n            }\r\n\r\n            function getContainer(options, create) {\r\n                if (!options) { options = getOptions(); }\r\n                $container = $('#' + options.containerId);\r\n                if ($container.length) {\r\n                    return $container;\r\n                }\r\n                if (create) {\r\n                    $container = createContainer(options);\r\n                }\r\n                return $container;\r\n            }\r\n\r\n            function info(message, title, optionsOverride) {\r\n                return notify({\r\n                    type: toastType.info,\r\n                    iconClass: getOptions().iconClasses.info,\r\n                    message: message,\r\n                    optionsOverride: optionsOverride,\r\n                    title: title\r\n                });\r\n            }\r\n\r\n            function subscribe(callback) {\r\n                listener = callback;\r\n            }\r\n\r\n            function success(message, title, optionsOverride) {\r\n                return notify({\r\n                    type: toastType.success,\r\n                    iconClass: getOptions().iconClasses.success,\r\n                    message: message,\r\n                    optionsOverride: optionsOverride,\r\n                    title: title\r\n                });\r\n            }\r\n\r\n            function warning(message, title, optionsOverride) {\r\n                return notify({\r\n                    type: toastType.warning,\r\n                    iconClass: getOptions().iconClasses.warning,\r\n                    message: message,\r\n                    optionsOverride: optionsOverride,\r\n                    title: title\r\n                });\r\n            }\r\n\r\n            function clear($toastElement, clearOptions) {\r\n                var options = getOptions();\r\n                if (!$container) { getContainer(options); }\r\n                if (!clearToast($toastElement, options, clearOptions)) {\r\n                    clearContainer(options);\r\n                }\r\n            }\r\n\r\n            function remove($toastElement) {\r\n                var options = getOptions();\r\n                if (!$container) { getContainer(options); }\r\n                if ($toastElement && $(':focus', $toastElement).length === 0) {\r\n                    removeToast($toastElement);\r\n                    return;\r\n                }\r\n                if ($container.children().length) {\r\n                    $container.remove();\r\n                }\r\n            }\r\n\r\n            // internal functions\r\n\r\n            function clearContainer (options) {\r\n                var toastsToClear = $container.children();\r\n                for (var i = toastsToClear.length - 1; i >= 0; i--) {\r\n                    clearToast($(toastsToClear[i]), options);\r\n                }\r\n            }\r\n\r\n            function clearToast ($toastElement, options, clearOptions) {\r\n                var force = clearOptions && clearOptions.force ? clearOptions.force : false;\r\n                if ($toastElement && (force || $(':focus', $toastElement).length === 0)) {\r\n                    $toastElement[options.hideMethod]({\r\n                        duration: options.hideDuration,\r\n                        easing: options.hideEasing,\r\n                        complete: function () { removeToast($toastElement); }\r\n                    });\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n\r\n            function createContainer(options) {\r\n                $container = $('<div/>')\r\n                    .attr('id', options.containerId)\r\n                    .addClass(options.positionClass)\r\n                    .attr('aria-live', 'polite')\r\n                    .attr('role', 'alert');\r\n\r\n                $container.appendTo($(options.target));\r\n                return $container;\r\n            }\r\n\r\n            function getDefaults() {\r\n                return {\r\n                    tapToDismiss: true,\r\n                    toastClass: 'toast',\r\n                    containerId: 'toast-container',\r\n                    debug: false,\r\n\r\n                    showMethod: 'fadeIn', //fadeIn, slideDown, and show are built into jQuery\r\n                    showDuration: 300,\r\n                    showEasing: 'swing', //swing and linear are built into jQuery\r\n                    onShown: undefined,\r\n                    hideMethod: 'fadeOut',\r\n                    hideDuration: 1000,\r\n                    hideEasing: 'swing',\r\n                    onHidden: undefined,\r\n\r\n                    extendedTimeOut: 1000,\r\n                    iconClasses: {\r\n                        error: 'toast-error',\r\n                        info: 'toast-info',\r\n                        success: 'toast-success',\r\n                        warning: 'toast-warning'\r\n                    },\r\n                    iconClass: 'toast-info',\r\n                    positionClass: 'toast-top-right',\r\n                    timeOut: 5000, // Set timeOut and extendedTimeOut to 0 to make it sticky\r\n                    titleClass: 'toast-title',\r\n                    messageClass: 'toast-message',\r\n                    target: 'body',\r\n                    closeHtml: '<button type=\"button\">&times;</button>',\r\n                    newestOnTop: true,\r\n                    preventDuplicates: false,\r\n                    progressBar: false,\r\n                    showTimer: false,\r\n                    timerOptions: {\r\n                        size: 56,\r\n                        stroke: 5\r\n                    }\r\n                };\r\n            }\r\n\r\n            function publish(args) {\r\n                if (!listener) { return; }\r\n                listener(args);\r\n            }\r\n\r\n            function notify(map) {\r\n                var options = getOptions();\r\n                var iconClass = map.iconClass || options.iconClass;\r\n\r\n                if (typeof (map.optionsOverride) !== 'undefined') {\r\n                    options = $.extend(options, map.optionsOverride);\r\n                    iconClass = map.optionsOverride.iconClass || iconClass;\r\n                }\r\n\r\n                if (shouldExit(options, map)) { return; }\r\n\r\n                toastId++;\r\n\r\n                $container = getContainer(options, true);\r\n\r\n                var intervalId = null;\r\n                var $toastElement = $('<div/>');\r\n                var $titleElement = $('<div/>');\r\n                var $messageElement = $('<div/>');\r\n                var $progressElement = $('<div/>');\r\n                var $blockerElement = $('<div class=\"toast-blocker\"/>');\r\n                var $closeElement = $(options.closeHtml);\r\n                var $timerElement = $(\r\n                    '<div class=\"toast-timer\">' +\r\n                        '<svg>' +\r\n                            '<path fill=\"none\" stroke=\"#ffffff\" />' +\r\n                            '<text fill=\"#ffffff\" text-anchor=\"middle\" dominant-baseline=\"central\"></text>' +\r\n                        '</svg>' +\r\n                    '</div>'\r\n                );\r\n                var progressBar = {\r\n                    intervalId: null,\r\n                    hideEta: null,\r\n                    maxHideTime: null\r\n                };\r\n                var response = {\r\n                    toastId: toastId,\r\n                    state: 'visible',\r\n                    startTime: new Date(),\r\n                    options: options,\r\n                    map: map\r\n                };\r\n\r\n                personalizeToast();\r\n\r\n                displayToast();\r\n\r\n                handleEvents();\r\n\r\n                publish(response);\r\n\r\n                if (options.debug && console) {\r\n                    console.log(response);\r\n                }\r\n\r\n                return $toastElement;\r\n\r\n                function personalizeToast() {\r\n                    setIcon();\r\n                    setTitle();\r\n                    setMessage();\r\n                    setCloseButton();\r\n                    setProgressBar();\r\n                    setSequence();\r\n                    setBlocker();\r\n                }\r\n\r\n                function handleEvents() {\r\n                    $toastElement.hover(stickAround, delayedHideToast);\r\n                    if (!options.onclick && options.tapToDismiss) {\r\n                        $toastElement.click(hideToast);\r\n                    }\r\n\r\n                    if (options.closeButton && $closeElement) {\r\n                        $closeElement.click(function (event) {\r\n                            if (event.stopPropagation) {\r\n                                event.stopPropagation();\r\n                            } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {\r\n                                event.cancelBubble = true;\r\n                            }\r\n                            hideToast(true);\r\n                        });\r\n                    }\r\n\r\n                    if (options.onclick) {\r\n                        $toastElement.click(function () {\r\n                            options.onclick();\r\n                            hideToast();\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function displayToast() {\r\n                    $toastElement.hide();\r\n\r\n                    $toastElement[options.showMethod](\r\n                        {duration: options.showDuration, easing: options.showEasing, complete: options.onShown}\r\n                    );\r\n\r\n                    if (options.timeOut > 0) {\r\n                        intervalId = setTimeout(hideToast, options.timeOut);\r\n                        progressBar.maxHideTime = parseFloat(options.timeOut);\r\n                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\r\n                        //if (options.progressBar) {\r\n                            progressBar.intervalId = setInterval(updateProgress, 10);\r\n                        //}\r\n                    }\r\n                }\r\n\r\n                function setIcon() {\r\n                    if (map.iconClass) {\r\n                        $toastElement.addClass(options.toastClass).addClass(iconClass);\r\n                    }\r\n                }\r\n\r\n                function setSequence() {\r\n                    if (options.newestOnTop) {\r\n                        $container.prepend($toastElement);\r\n                    } else {\r\n                        $container.append($toastElement);\r\n                    }\r\n                }\r\n\r\n                function setTitle() {\r\n                    if (map.title) {\r\n                        $titleElement.append(map.title).addClass(options.titleClass);\r\n                        $toastElement.append($titleElement);\r\n                    }\r\n                }\r\n\r\n                function setMessage() {\r\n                    if (map.message) {\r\n                        $messageElement.append(map.message).addClass(options.messageClass);\r\n                        $toastElement.append($messageElement);\r\n                    }\r\n                    if(options.showTimer) {\r\n                        var size = options.timerOptions.size;\r\n                        var stroke = options.timerOptions.stroke;\r\n\r\n                        $toastElement.prepend($timerElement);\r\n                        $timerElement.find(\"svg\").css({width: size, height: size});\r\n                        $timerElement.find(\"text\").attr({x: size/2, y: size/2});\r\n                        $timerElement.find(\"path\")\r\n                            .attr('stroke-width', stroke);\r\n                    }\r\n                }\r\n\r\n                function setCloseButton() {\r\n                    if (options.closeButton) {\r\n                        $closeElement.addClass('toast-close-button').attr('role', 'button');\r\n                        $toastElement.prepend($closeElement);\r\n                    }\r\n                }\r\n\r\n                function setBlocker() {\r\n                    if (options.blockUi) {\r\n                        $('body').prepend($blockerElement);\r\n                        $container.on(\"DOMNodeRemoved\", function(e) {\r\n                            if(e.target == $toastElement[0]) {\r\n                                $blockerElement.remove();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                function setProgressBar() {\r\n                    if (options.progressBar) {\r\n                        $progressElement.addClass('toast-progress');\r\n                        $toastElement.prepend($progressElement);\r\n                    }\r\n                }\r\n\r\n                function shouldExit(options, map) {\r\n                    if (options.preventDuplicates) {\r\n                        if (map.message === previousToast) {\r\n                            return true;\r\n                        } else {\r\n                            previousToast = map.message;\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                function hideToast(override) {\r\n                    if ($(':focus', $toastElement).length && !override) {\r\n                        return;\r\n                    }\r\n                    clearTimeout(progressBar.intervalId);\r\n                    return $toastElement[options.hideMethod]({\r\n                        duration: options.hideDuration,\r\n                        easing: options.hideEasing,\r\n                        complete: function () {\r\n                            removeToast($toastElement);\r\n                            if (options.onHidden && response.state !== 'hidden') {\r\n                                options.onHidden();\r\n                            }\r\n                            response.state = 'hidden';\r\n                            response.endTime = new Date();\r\n                            publish(response);\r\n                        }\r\n                    });\r\n                }\r\n\r\n                function delayedHideToast() {\r\n                    if (options.timeOut > 0 || options.extendedTimeOut > 0) {\r\n                        intervalId = setTimeout(hideToast, options.extendedTimeOut);\r\n                        progressBar.maxHideTime = parseFloat(options.extendedTimeOut);\r\n                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\r\n                    }\r\n                }\r\n\r\n                function stickAround() {\r\n                    progressBar.maxHideTime = parseFloat(options.extendedTimeOut);\r\n                    clearTimeout(intervalId);\r\n                    progressBar.hideEta = 0;\r\n                    $toastElement.stop(true, true)[options.showMethod](\r\n                        {duration: options.showDuration, easing: options.showEasing}\r\n                    );\r\n                }\r\n\r\n                function updateProgress() {\r\n                    var percentage = ((progressBar.hideEta - (new Date().getTime())) / progressBar.maxHideTime) * 100;\r\n                    if(percentage < 0) {\r\n                        percentage = 100;\r\n                    }\r\n\r\n                    $progressElement.width(percentage + '%');\r\n                    if (options.showTimer) {\r\n                        var size = options.timerOptions.size;\r\n                        var stroke = options.timerOptions.stroke;\r\n\r\n                        $timerElement.find(\"path\")\r\n                            .attr(\"d\", describeArc(size/2, size/2, size/2 - stroke / 2, (100-percentage) * 360 / 100, 359.99));\r\n\r\n                        var totalSeconds = percentage * progressBar.maxHideTime / 100 / 1000;\r\n                        var seconds = Math.floor(totalSeconds % 60);\r\n                        var minutes = Math.floor(totalSeconds / 60);\r\n                        var text = pad(minutes || 0, 2) + ':' + pad(seconds || 0, 2);\r\n                        $timerElement.find('text').text(text);\r\n                    }\r\n                }\r\n            }\r\n\r\n            function getOptions() {\r\n                return $.extend({}, getDefaults(), toastr.options);\r\n            }\r\n\r\n            function removeToast($toastElement) {\r\n                if (!$container) { $container = getContainer(); }\r\n                if ($toastElement.is(':visible')) {\r\n                    return;\r\n                }\r\n                $toastElement.remove();\r\n                $toastElement = null;\r\n                if ($container.children().length === 0) {\r\n                    $container.remove();\r\n                    previousToast = undefined;\r\n                }\r\n            }\r\n\r\n        })();\r\n\r\n\r\n        function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n            var angleInRadians = (angleInDegrees-90) * Math.PI / 180.0;\r\n\r\n            return {\r\n                x: centerX + (radius * Math.cos(angleInRadians)),\r\n                y: centerY + (radius * Math.sin(angleInRadians))\r\n            };\r\n        }\r\n\r\n        function describeArc(x, y, radius, startAngle, endAngle){\r\n\r\n            var start = polarToCartesian(x, y, radius, endAngle);\r\n            var end = polarToCartesian(x, y, radius, startAngle);\r\n\r\n            var arcSweep = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n\r\n            var d = [\r\n                \"M\", start.x, start.y,\r\n                \"A\", radius, radius, 0, arcSweep, 0, end.x, end.y\r\n            ].join(\" \");\r\n\r\n            return d;\r\n        }\r\n\r\n        function pad(n, width, z) {\r\n            z = z || '0';\r\n            n = n + '';\r\n            return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\r\n        }\r\n    });\r\n}(typeof define === 'function' && define.amd ? define : function (deps, factory) {\r\n    if (typeof module !== 'undefined' && module.exports) { //Node\r\n        module.exports = factory(require('jquery'));\r\n    } else {\r\n        window['toastr'] = factory(window['jQuery']);\r\n    }\r\n}));\r\n"],"sourceRoot":"/source/"}